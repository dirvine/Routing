var searchIndex = JSON.parse('{\
"sn_routing":{"doc":"Peer implementation for a resilient decentralised network …","t":[4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,6,4,13,12,12,12,12,12,13,12,12,12,13,12,12,13,12,12,12,13,12,13,12,12,13,13,12,12,13,13,4,13,13,13,3,3,12,12,12,3,3,3,4,13,13,13,13,17,17,17,17,3,12,12,12,12,12,12,12,12,12,12,12,3,3,12,17,17,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Error","FailedSignature","CannotRoute","EmptyRecipientList","InvalidConfig","CannotConnectEndpoint","AddressNotReachable","Network","InvalidState","InvalidSrcLocation","InvalidDstLocation","InvalidMessage","InvalidSignatureShare","MissingSecretKeyShare","FailedSend","ConnectionClosed","InvalidSectionChain","Messaging","ProposalError","CreateError","ExtendProofError","InvalidPayload","TryJoinLater","Result","Event","MessageReceived","content","src","dst","proof","proof_chain","MemberJoined","name","previous_name","age","MemberLeft","name","age","EldersChanged","elders","sibling_elders","self_status_change","RelocationStarted","previous_name","Relocated","previous_name","new_keypair","RestartRequired","ClientMessageReceived","msg","user","ClientLost","AdultsChanged","NodeElderChange","Promoted","Demoted","None","SendStream","Config","first","keypair","transport_config","EventStream","Routing","SectionChain","SectionChainError","FailedSignature","KeyNotFound","Untrusted","InvalidOperation","FIRST_SECTION_MAX_AGE","FIRST_SECTION_MIN_AGE","MIN_ADULT_AGE","MIN_AGE","TransportConfig","hard_coded_contacts","local_port","local_ip","forward_port","external_port","external_ip","max_msg_size_allowed","idle_timeout_msec","keep_alive_interval_msec","bootstrap_cache_dir","upnp_lease_duration","Prefix","XorName","0","XOR_NAME_LEN","RECOMMENDED_SECTION_SIZE","ELDER_SIZE","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","as_fail","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","equivalent","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","equivalent","as_fail","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","equivalent","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","vzip","equivalent","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","vzip","equivalent","hash","write_hex","write_hex_upper","deserialize","eq","ne","default","clone","serialize","clap","from_clap","fmt","fmt","fmt","default","default","fmt","fmt","serialize","serialize","deserialize","deserialize","fmt","not","fmt","fmt","from_str","clone","clone","cmp","cmp","hash","hash","eq","ne","eq","deref","as_ref","as_ref","partial_cmp","partial_cmp","fmt","from","drop","from","from","from","clone","default","eq","ne","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","hash","source","serialize","deserialize","send_user_msg","send","finish","next","new","set_joins_allowed","propose_offline","age","public_key","keypair_as_bytes","sign_as_node","sign_as_elder","verify","name","our_connection_info","section_chain","our_prefix","matches_our_prefix","is_elder","our_elders","our_elders_sorted_by_distance_to","our_adults","our_adults_sorted_by_distance_to","our_section","other_sections","section_key","matching_section","send_message","public_key_set","our_history","our_index","new","insert","merge","minimize","truncate","extend","keys","root_key","last_key","prev_key","has_key","check_trust","cmp_by_position","len","main_branch_len","new","name","pushed","popped","bit_count","is_empty","is_compatible","is_extension_of","is_neighbour","common_prefix","matches","cmp_distance","cmp_breadth_first","lower_bound","upper_bound","range_inclusive","is_covered_by","with_flipped_bit","substituted_in","sibling","ancestor","ancestors","from_content","random","bit","cmp_distance"],"q":["sn_routing","","","","","","","","","","","","","","","","","","","","","","","","","","sn_routing::Event","","","","","sn_routing","sn_routing::Event","","","sn_routing","sn_routing::Event","","sn_routing","sn_routing::Event","","","sn_routing","sn_routing::Event","sn_routing","sn_routing::Event","","sn_routing","","sn_routing::Event","","sn_routingd":["Internal error.","","","","","","","","","","","","","","","","","","","","","","","The type returned by the sn_routing message handling …","An Event raised by a <code>Node</code> or <code>Client</code> via its event sender.","Received a message.","The content of the message.","The source location that sent the message.","The destination location that receives the message.","The proof if the message was set to be aggregated at …","The proof chain for the message, if any.","A new peer joined our section.","Name of the node","Previous name before relocation or <code>None</code> if it is a new …","Age of the node","A node left our section.","Name of the node","Age of the node","The set of elders in our section has changed.","The Elders of our section.","The Elders of the sibling section, if this event is fired …","Promoted, demoted or no change?","This node has started relocating to other section. Will …","Previous name before relocation","This node has completed relocation to other section.","Old name before the relocation.","New keypair to be used after relocation.","Disconnected or failed to connect - restart required.","Received a message from a client node.","The content of the message.","The SocketAddr and PublicKey that sent the message. …","Failed in sending a message to client, or connection to …","Notify the current list of adult nodes, in case of …","A flag in EldersChanged event, indicating whether the …","The node was promoted to Elder.","The node was demoted to Adult.","There was no change to the node.","Stream of outgoing messages","Routing configuration.","If true, configures the node to start a new network …","The <code>Keypair</code> of the node or <code>None</code> for randomly generated …","Configuration for the underlying network transport.","Stream of routing node events","Interface for sending and receiving messages to and from …","Chain of section BLS keys where every key is proven …","Error resulting from operations on <code>SectionChain</code>.","","","","","Defines the higher bound of this range.","During the first section, nodes can start at a range of …","The minimum age a node becomes an adult node.","The minimum age a node can have. The Infants will start …","QuicP2p configurations","Hard Coded contacts","Port we want to reserve for QUIC. If none supplied we’…","IP address for the listener. If none is supplied and …","Specify if port forwarding via UPnP should be done or …","External port number assigned to the socket address of …","External IP address of the computer on the WAN. This …","This is the maximum message size we’ll allow the peer …","If we hear nothing from the peer in the given interval we …","Interval to send keep-alives if we are idling so that the …","Directory in which the bootstrap cache will be stored. If …","Duration of a UPnP port mapping.","A section prefix, i.e. a sequence of bits specifying the …","A 256-bit number, viewed as a point in XOR space.","","Constant byte length of <code>XorName</code>.","Recommended section size. sn_routing will keep adding …","Number of elders per sectionend a message using the stream created by the initiator","Send a wire message","Gracefully finish current stream","Returns next event","Creates new node using the given config and bootstraps it …","Sets the JoinsAllowed flag.","Starts a proposal that a node has gone offline. This can …","Returns the current age of this node.","Returns the ed25519 public key of this node.","Returns the ed25519 keypair of this node, as bytes.","Signs <code>data</code> with the ed25519 key of this node.","Signs <code>data</code> with the BLS secret key share of this node, if …","Verifies <code>signature</code> on <code>data</code> with the ed25519 public key of …","The name of this node.","Returns connection info of this node.","Returns the Section Proof Chain","Prefix of our section","Finds out if the given XorName matches our prefix.","Returns whether the node is Elder.","Returns the information of all the current section elders.","Returns the elders of our section sorted by their …","Returns the information of all the current section adults.","Returns the adults of our section sorted by their …","Returns the info about our section or <code>None</code> if we are not …","Returns the info about other sections in the network …","Returns the last known public key of the section with …","Returns the info about the section matching the name.","Send a message. Messages sent here, either section to …","Returns the current BLS public key set if this node has …","Returns our section proof chain.","Returns our index in the current BLS group if this node …","Creates a new chain consisting of only one block.","Insert new key into the chain. <code>parent_key</code> must exists in …","Merges two chains into one.","Creates a minimal sub-chain of <code>self</code> that contains all …","Returns a sub-chain of <code>self</code> truncated to the last <code>count</code> …","Returns the smallest super-chain of <code>self</code> that would be …","Iterator over all the keys in the chain in order.","Returns the root key of this chain. This is the first key …","Returns the last key of this chain.","Returns the parent key of the last key or the root key if …","Returns whether <code>key</code> is present in this chain.","Given a collection of keys that are already trusted, …","Compare the two keys by their position in the chain. The …","Returns the number of blocks in the chain. This is always …","Returns the number of block on the main branch of the …","Creates a new <code>Prefix</code> with the first <code>bit_count</code> bits of <code>name</code>…","Returns the name of this prefix.","Returns <code>self</code> with an appended bit: <code>0</code> if <code>bit</code> is <code>false</code>, and …","Returns a prefix copying the first <code>bitcount() - 1</code> bits …","Returns the number of bits in the prefix.","Returns <code>true</code> if this is the empty prefix, with no bits.","Returns <code>true</code> if <code>self</code> is a prefix of <code>other</code> or vice versa.","Returns <code>true</code> if <code>other</code> is compatible but strictly shorter …","Returns <code>true</code> if the <code>other</code> prefix differs in exactly one …","Returns the number of common leading bits with the input …","Returns <code>true</code> if this is a prefix of the given <code>name</code>.","Compares the distance of <code>self</code> and <code>other</code> to <code>target</code>. …","Compares the prefixes using breadth-first order. That is, …","Returns the smallest name matching the prefix","Returns the largest name matching the prefix","Inclusive range from lower_bound to upper_bound","Returns whether the namespace defined by <code>self</code> is covered …","Returns the neighbouring prefix differing in the <code>i</code>-th bit …","Returns the given <code>name</code> with first bits replaced by <code>self</code>","Returns the same prefix, with the last bit flipped, or …","Returns the ancestors of this prefix that has the given …","Returns an iterator that yields all ancestors of this …","Generate a XorName for the given content (for …","Generate a random XorName","Returns <code>true</code> if the <code>i</code>-th bit is <code>1</code>.","Compares the distance of the arguments to <code>self</code>. Returns …"],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,2,3,3,3,3,3,2,4,4,4,2,5,5,2,6,6,6,2,7,2,8,8,2,2,9,9,2,2,0,10,10,10,0,0,11,11,11,0,0,0,0,12,12,12,12,0,0,0,0,0,13,13,13,13,13,13,13,13,13,13,13,0,0,14,0,0,0,1,1,1,1,1,1,1,1,1,1,15,15,15,15,15,15,15,15,10,10,10,10,10,10,10,10,2,2,2,2,2,2,2,2,16,16,16,16,16,16,16,16,11,11,11,11,11,11,11,11,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,18,18,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,19,19,19,19,19,19,19,19,19,19,19,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,13,13,13,13,13,13,13,13,15,13,14,14,19,19,14,19,14,19,14,14,14,14,19,19,14,19,14,19,14,19,14,14,19,14,14,14,14,19,14,14,17,1,1,1,18,11,18,18,12,1,10,2,11,18,12,1,12,18,1,18,18,15,15,15,16,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,14,14,14,14],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["fail",8]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["bool",15]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["bool",15]],[[],["fail",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["bool",15]],[[["sha3",3]]],[[],[["result",4],["error",3]]],[[],[["result",4],["error",3]]],[[],[["config",3],["result",4]]],[[["config",3]],["bool",15]],[[["config",3]],["bool",15]],[[],["config",3]],[[],["config",3]],[[],["result",4]],[[],["app",3]],[[["argmatches",3]],["config",3]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[],["xorname",3]],[[],["prefix",3]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[],["result",4]],[[],["result",4]],[[],[["prefix",3],["result",4]]],[[],[["result",4],["xorname",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[],["xorname",3]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["str",15]],[["result",4],["prefix",3]]],[[],["xorname",3]],[[],["prefix",3]],[[["xorname",3]],["ordering",4]],[[["prefix",3]],["ordering",4]],[[]],[[]],[[["xorname",3]],["bool",15]],[[["xorname",3]],["bool",15]],[[["prefix",3]],["bool",15]],[[]],[[],["xorname",3]],[[]],[[["xorname",3]],[["ordering",4],["option",4]]],[[["prefix",3]],[["ordering",4],["option",4]]],[[["formatter",3]],[["result",4],["error",3]]],[[["publickey",4]],["xorname",3]],[[]],[[["error",4]]],[[["sectionchainerror",4]]],[[["error",4]]],[[],["sectionchain",3]],[[]],[[["sectionchain",3]],["bool",15]],[[["sectionchain",3]],["bool",15]],[[["error",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[],[["error",8],["option",4]]],[[],["result",4]],[[],["result",4]],[[["bytes",3]]],[[["wiremsg",4]]],[[]],[[]],[[["config",3]]],[[["bool",15]]],[[["xorname",3]]],[[]],[[]],[[]],[[]],[[["publickey",3]]],[[["signature",3]]],[[]],[[],["socketaddr",4]],[[]],[[]],[[["xorname",3]]],[[]],[[]],[[["xorname",3]]],[[]],[[["xorname",3]]],[[]],[[]],[[["prefix",3]]],[[["xorname",3]]],[[["option",4],["bytes",3],["publickey",3],["itinerary",3]]],[[]],[[]],[[]],[[["publickey",3]]],[[["publickey",3],["signature",3],["publickey",3]],[["result",4],["error",4]]],[[],[["result",4],["error",4]]],[[],[["error",4],["result",4]]],[[["usize",15]]],[[["publickey",3]],[["error",4],["result",4]]],[[]],[[],["publickey",3]],[[],["publickey",3]],[[],["publickey",3]],[[["publickey",3]],["bool",15]],[[],["bool",15]],[[["publickey",3]],["ordering",4]],[[],["usize",15]],[[],["usize",15]],[[["usize",15],["xorname",3]],["prefix",3]],[[],["xorname",3]],[[["bool",15]],["prefix",3]],[[],["prefix",3]],[[],["usize",15]],[[],["bool",15]],[[["prefix",3]],["bool",15]],[[["prefix",3]],["bool",15]],[[["prefix",3]],["bool",15]],[[["xorname",3]],["usize",15]],[[["xorname",3]],["bool",15]],[[["xorname",3],["prefix",3]],["ordering",4]],[[["prefix",3]],["ordering",4]],[[],["xorname",3]],[[],["xorname",3]],[[],[["xorname",3],["rangeinclusive",3]]],[[],["bool",15]],[[["u8",15]],["prefix",3]],[[["xorname",3]],["xorname",3]],[[],["prefix",3]],[[["u8",15]],["prefix",3]],[[],["ancestors",3]],[[],["xorname",3]],[[],["xorname",3]],[[["u8",15]],["bool",15]],[[["xorname",3]],["ordering",4]]],"p":[[4,"Error"],[4,"Event"],[13,"MessageReceived"],[13,"MemberJoined"],[13,"MemberLeft"],[13,"EldersChanged"],[13,"RelocationStarted"],[13,"Relocated"],[13,"ClientMessageReceived"],[4,"NodeElderChange"],[3,"Config"],[4,"SectionChainError"],[3,"TransportConfig"],[3,"XorName"],[3,"SendStream"],[3,"EventStream"],[3,"Routing"],[3,"SectionChain"],[3,"Prefix"]]}\
}');
initSearch(searchIndex);